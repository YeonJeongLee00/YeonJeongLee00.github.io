{"componentChunkName":"component---src-templates-category-template-js","path":"/posts/행사","result":{"pageContext":{"currentCategory":"행사","categories":["All","행사"],"edges":[{"node":{"id":"999a3eb7-276c-515d-b85b-690fea8d17a5","excerpt":"Video Label ✏️ 내용정리 Q. 개발자로서 개발 역량 외에 중요한 역량이 있다면? 개발 역량 만큼 커뮤니케이션 역량도 중요 하나의 제품을 만들었던 조직이 이후에 제품을 계속 발전시켜나가는 것도 함께 해야한다. 각자의 일을 구분짓게 되면 팀 화합이 힘들다 어떤 기획자가 말도 안되는 기능을 요구했을 때 개발자는 안된다는 것에 끝내는게 아니라 왜 이런 기능을 요구하게 되었지? 근본적인 문제가 뭐 였을까? 물어보기 요구사항에 방점이 찍히는 것이 아니라 해결하고자 하는 문제가 뭔지?에 집중할 수 있는 커뮤니케이션 Q. 회사 선택에 나만에 중요한 기준? 주니어 개발자이기 때문에 성장 Q. 개발자에서 CTO가 되셨는데 어떠신가요? 엔지니어링적인 전문성을 조금씩 놓더라도 그 외 다른 역량은 좀 쌓을 수 있겠다고 생각 Q. 개발자를 꿈꾸는 사람들에게 추천할 만한 책이 있나요? 개발자라는 직업 자체가 어떤 일을 하는 사람이고 어떤 문제를 해결하는 사람인지를 이야기하는 책을 추천 뉴욕의 프로그…","fields":{"slug":"/SEP2022_review2/"},"frontmatter":{"categories":"행사","title":"[SEF2022] 입문자를 위한 CTO의 특급과외","date":"December 02, 2022"}},"next":{"fields":{"slug":"/SEP2022_review1/"}},"previous":null},{"node":{"id":"89add630-b25b-5ba7-8236-0f24d56d1c02","excerpt":"Video Label ✏️ 내용정리 1. mindset 코딩 사고방식 배우기 삶에 있어서 모든 문제, 비효율성, 성가신 점에 대해 “자신이 해결책을 가지고 있다”고 믿기 해결책이 분명이 있을 것이라는 믿음이 있어야 포기하지 않고 계속 도전할 수 있다. 겸손 컴퓨터는 절대 틀리지 않는다! 문제 해결 방법 배우기 코딩은 문제를 해결하기 위한 방법 좋은 개발자란 학습을 잘 해낸다는 것 새로운 것과 기술을 빠르게 습득한다는 것 아직 모르는게 많지만 인내심을 가지고 시간을 투자하면 뭐든지 배울 수 있음을 깨닫는 것 2. 코딩을 배우는 방법 하나의 프로그래밍 언어를 깊게 배우기 프로그래밍을 배우기 위해 사용하는 언어가 직장 내에서 사용하는 언어와 같을 필요는 없다 개인프로젝트에서 사용하는 언어와 같을 필요도 없다 스크립트 배우기 데이터 작업이나 파일명을 변경하는 일처럼 모든 일을 수동으로 하는 느낌이 들 때가 있다. 스크립트를 이용해서 자동화하자 → 실력도 증가할 수 있음 개인프로젝트 시작하기…","fields":{"slug":"/SEP2022_review1/"},"frontmatter":{"categories":"행사","title":"[SEF2022] 내가 처음부터 다시 개발을 시작한다면?","date":"December 02, 2022"}},"next":null,"previous":{"fields":{"slug":"/SEP2022_review2/"}}}]}},"staticQueryHashes":["1073350324","1956554647","2938748437"]}